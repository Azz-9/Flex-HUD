package me.Azz_9.better_hud.client.screens.configurationScreen.crosshairConfigScreen.crosshairEditor;

import me.Azz_9.better_hud.client.screens.AbstractSmoothScrollableList;
import net.minecraft.client.MinecraftClient;
import net.minecraft.client.gui.DrawContext;
import net.minecraft.client.gui.Element;
import net.minecraft.client.gui.Selectable;
import net.minecraft.client.gui.widget.ClickableWidget;
import net.minecraft.client.gui.widget.ElementListWidget;

import java.util.List;

public class CrosshairPresetsList extends AbstractSmoothScrollableList<CrosshairPresetsList.CrosshairEntry> {
	private final CrosshairEditor crosshairEditor;
	private final int PIXEL_SIZE = 2;

	public CrosshairPresetsList(int width, int height, int y, int x, CrosshairEditor crosshairEditor) {
		super(MinecraftClient.getInstance(), width, height, y, crosshairEditor.getPixels().length * 2);
		this.setX(x);
		this.crosshairEditor = crosshairEditor;
		int[][][] textures = new int[][][]{
				{
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				},
				{
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				},
				{
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, -1, -1, -1, 0, -1, 0, -1, -1, -1, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				},
				{
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				},
				{
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, -1, -1, -1, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, -1, 0, 0, 0, -1, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0},
						{0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0},
						{0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0},
						{0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0},
						{0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, -1, 0, 0, 0, -1, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, -1, -1, -1, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				},
				{
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, -1, -1, -1, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, -1, 0, 0, 0, -1, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0},
						{0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0},
						{0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0},
						{0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0},
						{0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, -1, 0, 0, 0, -1, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, -1, -1, -1, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				},
				{
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				},
				{
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				},
				{
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, -1, 0, -1, 0, -1, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, -1, 0, -1, 0, -1, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				},
				{
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, -1, 0, -1, 0, -1, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, -1, -1, -1, 0, -1, 0, -1, -1, -1, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, -1, 0, -1, 0, -1, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				},
				{
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				},
				{
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				},
				{
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, -1, 0, -1, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				},
				{
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, -1, -1, 0, -1, -1, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0},
						{0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0},
						{0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0},
						{0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0},
						{0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, -1, 0, -1, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				}
		};

		for (int[][] texture : textures) {
			this.addEntry(new CrosshairEntry(texture, PIXEL_SIZE));
		}
	}

	@Override
	protected int addEntry(CrosshairEntry entry) {
		entry.parent = this;
		return super.addEntry(entry);
	}

	@Override
	public int getRowWidth() {
		return this.width;
	}

	@Override
	protected int getScrollbarX() {
		return this.getRight();
	}

	public static class CrosshairEntry extends ElementListWidget.Entry<CrosshairEntry> {
		private final int[][] texture;
		private CrosshairPresetsList parent = null;
		private final int PIXEL_SIZE;

		public CrosshairEntry(int[][] texture, int pixelSize) {
			this.texture = texture;
			this.PIXEL_SIZE = pixelSize;
		}

		@Override
		public void render(DrawContext context, int index, int y, int x, int entryWidth, int entryHeight, int mouseX, int mouseY, boolean hovered, float tickProgress) {
			int centerX = x + (entryWidth - texture.length * PIXEL_SIZE) / 2;
			int centerY = y + (entryHeight - texture.length * PIXEL_SIZE) / 2;
			for (int textureY = 0; textureY < texture.length; textureY++) {
				for (int textureX = 0; textureX < texture.length; textureX++) {
					if (texture[textureY][textureX] >> 24 != 0) {
						int pixelX = centerX + textureX * PIXEL_SIZE;
						int pixelY = centerY + textureY * PIXEL_SIZE;
						context.fill(pixelX, pixelY, pixelX + PIXEL_SIZE, pixelY + PIXEL_SIZE, texture[textureY][textureX]);
					}
				}
			}

			if (this.isMouseOver(mouseX, mouseY)) {
				context.fill(x, y, x + entryWidth, y + entryHeight, 0x10000000);
			} else {
				context.fill(x, y, x + entryWidth, y + entryHeight, 0x20000000);
			}
		}

		@Override
		public boolean mouseClicked(double mouseX, double mouseY, int button) {
			if (parent != null) {
				int[][] texture = new int[this.texture.length][this.texture[0].length];
				for (int textureY = 0; textureY < texture.length; textureY++) {
					texture[textureY] = this.texture[textureY].clone();
				}
				parent.crosshairEditor.setTexture(texture);
				ClickableWidget.playClickSound(MinecraftClient.getInstance().getSoundManager());
				return true;
			}
			return false;
		}

		@Override
		public List<? extends Selectable> selectableChildren() {
			return List.of();
		}

		@Override
		public List<? extends Element> children() {
			return List.of();
		}
	}
}
